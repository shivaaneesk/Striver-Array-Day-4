import java.util.Arrays;

class Solution {
    public int longestConsecutive(int[] nums) {
        if (nums == null || nums.length == 0) {
            return 0;
        }
        
        Arrays.sort(nums);
        int count = 1; // Start with count as 1 because a single number is a sequence of length 1
        int max = 1; // Start max as 1 for the same reason
        
        for (int i = 0; i < nums.length - 1; i++) {
            if (nums[i] == nums[i + 1]) {
                // Skip duplicates
                continue;
            } else if (nums[i] + 1 == nums[i + 1]) {
                // If the current number and the next number are consecutive
                count++;
            } else {
                // If they are not consecutive, update max and reset count
                if (max < count) {
                    max = count;
                }
                count = 1; // Reset count for a new sequence
            }
        }
        
        // Check once more to ensure the last sequence is considered
        if (max < count) {
            max = count;
        }
        
        return max;
    }
}
